<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sysapproval_approver</collection>
        <condition>current.state.changesTo('requested') &amp;&amp; current.source_table == 'x_vivso_hr_unique_offers'</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Remove subsequent approvals</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous) {
	
	/*
 	* Must have link to record being approved
 	* Check to see if user has previously approved
 	*/
	
	if(current.document_id || current.sysapproval){
		//Query for approval records for this user/record
		var app = new GlideRecord('sysapproval_approver');
		//Handle empty document_id and sysapproval fields
		if(!current.document_id.nil()){
			app.addQuery('document_id', current.document_id);
		}
		else if(!current.sysapproval.nil()){
			app.addQuery('sysapproval', current.sysapproval);
		}
		app.addQuery('approver', current.approver);
		app.addQuery('state', 'approved');
		app.query();
		if(app.next()){
			//If previous approval is found
			current.state = 'not_required';
			current.comments = "Approval marked by system as 'Not Longer Required' due to a previous approval on the same record by the same user.";
		}
	}
	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>erik.stolberg</sys_created_by>
        <sys_created_on>2017-08-14 20:21:34</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>40c0a7ca13684b001c24bda12244b08b</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Remove subsequent approvals</sys_name>
        <sys_overrides/>
        <sys_package display_value="Unique Offers" source="x_vivso_hr_unique">b38b600f4f007e0056b80195f110c749</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Unique Offers">b38b600f4f007e0056b80195f110c749</sys_scope>
        <sys_update_name>sys_script_40c0a7ca13684b001c24bda12244b08b</sys_update_name>
        <sys_updated_by>erik.stolberg</sys_updated_by>
        <sys_updated_on>2017-08-14 20:21:34</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=40c0a7ca13684b001c24bda12244b08b"/>
</record_update>
